
Build local database (via sqlite mayhaps); have to figure out way to
make analyzing its contents useful.

Counterexample generator

  Given a snippet of code, generate example input data that would
  invoke undefined behavior and/or crash the program:

  dereference a known-NULL pointer
  write to various points within a pointer:
    write to pointer before current position
    write to pointer as far past from current position as possible
  cause variable overflow
  cause variable underflow
  cause division by zero
  cause never-ending loop
  determine unchecked return values
  deadlocks

Determine useful metrics about program...
  Be able to transform from C code into functional-style code
    Explicitly pass all input as a parameter, instead of that
    whole global-variable thing.
  What are its bounds?
    CPU? I/O? memory? reading? writing?
  explore parallel execution
    at which point in the program would parallel execution be
    most advantageous?
  find cut and pasted code
    automatically refactor (that would be slick)

generate useful visualizations from source
  hmmm maybe do this using something like c2xml(?)
  generate graphs of function output based on values of inputs
  flow graphs
    dependency/interdependency mapping

